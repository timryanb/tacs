name: Build and deploy

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ENVIRONMENT_LINUX: >
            PATH=$PATH:/usr/lib64/openmpi/bin/ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64/openmpi/lib CC=mpicc
          CIBW_ENVIRONMENT_MACOS: >
            PATH="/usr/local/opt/open-mpi/bin:$PATH" LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/opt/lapack/lib:/usr/local/opt/open-mpi/lib:/usr/local/opt/metis/lib CC=mpicc
          CIBW_BEFORE_ALL_LINUX: >
            yum install openmpi-devel lapack-devel metis-devel -y &&
            adduser mpiuser &&
            cp Makefile.in.info Makefile.in &&
            make TACS_DIR=${PWD} METIS_LIB=-lmetis
          CIBW_BEFORE_ALL_MACOS: >
            brew install openmpi metis lapack openblas &&
            cp Makefile.in.info Makefile.in &&
            make TACS_DIR=${PWD} METIS_LIB=-lmetis SO_LINK_FLAGS="-fPIC -dynamiclib" LAPACK_LIBS="-framework accelerate"
          CIBW_TEST_EXTRAS: "testing"
          CIBW_BEFORE_TEST: >
            export OMPI_MCA_btl=self,tcp &&
            export OMPI_MCA_rmaps_base_oversubscribe=1
          CIBW_TEST_COMMAND_LINUX: >
            export TESTFLO=$(which testflo) &&
            chmod -R 777 /tmp/tmp.* &&
            su -c "${TESTFLO} --noreport {project}/tests/" mpiuser
          CIBW_TEST_COMMAND_MACOS: >
            testflo --noreport {project}/tests/
          CIBW_BUILD_VERBOSITY: 3

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl